{"version":3,"sources":["components/Feedback.module.css","components/Statistic/Statistic.module.css","components/Control/Control.js","components/Section/SectionTitle.js","components/Statistic/Statistic.js","components/Notification/Notification.js","components/Feedback.js","App.js","index.js","components/Control/Control.module.css"],"names":["module","exports","Control","onIncrement","Button","className","s","button","name","variant","onClick","SectionTitle","title","children","Statistic","good","neutral","bad","countTotal","countPositive","list","Notification","Feedback","state","props","initialValue","hanleIncrement","e","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","Math","ceil","feedback","this","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,4LCmCVC,EA9BC,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACjB,OACE,gCACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IAAEC,OACbC,KAAK,OACLC,QAAQ,kBACRC,QAASP,EAJX,kBAQA,cAACC,EAAA,EAAD,CACEC,UAAWC,IAAEC,OACbC,KAAK,UACLC,QAAQ,kBACRC,QAASP,EAJX,qBAQA,cAACC,EAAA,EAAD,CACEC,UAAWC,IAAEC,OACbC,KAAK,MACLC,QAAQ,kBACRC,QAASP,EAJX,qBChBSQ,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACnB,oCACE,6BAAKD,IACJC,M,iBCYUC,EAdG,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cACnD,OACE,qBAAId,UAAWC,IAAEc,KAAjB,UACE,wCAAWL,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,oDAEGC,GAAgC,EAFnC,WCLSE,EAHM,WACnB,OAAO,mDCKHC,E,4MAKJC,MAAQ,CACNR,KAAM,EAAKS,MAAMC,aACjBT,QAAS,EAAKQ,MAAMC,aACpBR,IAAK,EAAKO,MAAMC,c,EAGlBC,eAAiB,SAAAC,GACf,IAAIC,EAASD,EAAEC,OAAOpB,KACtB,EAAKqB,UAAS,SAAAC,GAAI,sBACfF,EAASE,EAAKF,GAAU,O,EAI7BG,mBAAqB,WACnB,OAAO,EAAKR,MAAMN,IAAM,EAAKM,MAAMP,QAAU,EAAKO,MAAMR,M,EAE1DiB,gCAAkC,WAChC,OAAOC,KAAKC,KAAM,EAAKX,MAAMR,KAAO,EAAKgB,qBAAwB,M,4CAGnE,WACE,OACE,0BAAS1B,UAAWC,IAAE6B,SAAtB,UACE,cAAC,EAAD,aAAcvB,MAAM,wBAAwBC,UAAQ,GAApD,WACE,cAAC,EAAD,CAASV,YAAaiC,KAAKV,mBAG5BU,KAAKL,qBAAuB,EAC3B,cAAC,EAAD,aAAclB,UAAQ,EAACD,MAAM,cAA7B,WACE,cAAC,EAAD,CACEG,KAAMqB,KAAKb,MAAMR,KACjBC,QAASoB,KAAKb,MAAMP,QACpBC,IAAKmB,KAAKb,MAAMN,IAChBC,WAAYkB,KAAKL,qBACjBZ,cAAeiB,KAAKJ,sCAIxB,cAAC,EAAD,W,GA3CaK,aAAjBf,EACGgB,aAAe,CACpBb,aAAc,GA+CHH,QC9CAiB,MARf,WACE,OACE,qCACE,cAAC,EAAD,CAAU1B,UAAQ,IADpB,Q,YCCJ2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B5C,EAAOC,QAAU,CAAC,OAAS,2B","file":"static/js/main.9daeeb20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__3YZWo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistic_list__1TOpx\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Control.module.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Control = ({ onIncrement }) => {\n  return (\n    <div>\n      <Button\n        className={s.button}\n        name=\"good\"\n        variant=\"outline-warning\"\n        onClick={onIncrement}\n      >\n        Good\n      </Button>\n      <Button\n        className={s.button}\n        name=\"neutral\"\n        variant=\"outline-warning\"\n        onClick={onIncrement}\n      >\n        Neutral\n      </Button>\n      <Button\n        className={s.button}\n        name=\"bad\"\n        variant=\"outline-warning\"\n        onClick={onIncrement}\n      >\n        Bad\n      </Button>\n    </div>\n  );\n};\nexport default Control;\nControl.propTypes = {\n  onIncrement: PropTypes.func.isRequired,\n};\n","import React from 'react';\n\nconst SectionTitle = ({ title, children }) => (\n  <section>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nexport default SectionTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistic.module.css';\nconst Statistic = ({ good, neutral, bad, countTotal, countPositive }) => {\n  return (\n    <ul className={s.list}>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n      <li>Total: {countTotal}</li>\n      <li>\n        Positive feedback:\n        {countPositive ? countPositive : 0}%\n      </li>\n    </ul>\n  );\n};\nexport default Statistic;\nStatistic.propTypes = {\n  countTotal: PropTypes.number.isRequired,\n  countPositive: PropTypes.number.isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n};\n","import React from 'react';\n\nconst Notification = () => {\n  return <p>No feedback given</p>;\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\nimport Control from './Control/Control';\nimport SectionTitle from './Section/SectionTitle';\nimport Statistic from './Statistic/Statistic';\nimport Notification from './Notification/Notification';\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: this.props.initialValue,\n    neutral: this.props.initialValue,\n    bad: this.props.initialValue,\n  };\n\n  hanleIncrement = e => {\n    let target = e.target.name;\n    this.setState(prev => ({\n      [target]: prev[target] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.bad + this.state.neutral + this.state.good;\n  };\n  countPositiveFeedbackPercentage = () => {\n    return Math.ceil((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    return (\n      <section className={s.feedback}>\n        <SectionTitle title=\"Please leave feedback\" children>\n          <Control onIncrement={this.hanleIncrement} />\n        </SectionTitle>\n\n        {this.countTotalFeedback() > 0 ? (\n          <SectionTitle children title=\"Statistics\">\n            <Statistic\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              countTotal={this.countTotalFeedback()}\n              countPositive={this.countPositiveFeedbackPercentage()}\n            />\n          </SectionTitle>\n        ) : (\n          <Notification />\n        )}\n      </section>\n    );\n  }\n}\nexport default Feedback;\nFeedback.propTypes = {\n  initialValue: PropTypes.number,\n};\n","import React from 'react';\nimport Feedback from './components/Feedback';\n\nfunction App() {\n  return (\n    <>\n      <Feedback children />;\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Control_button__UGcuD\"};"],"sourceRoot":""}